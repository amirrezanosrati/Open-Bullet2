name: OpenBullet2 Windows Runner

on:
  workflow_dispatch

jobs:
  run-ob2-windows:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      run: |
        dotnet --version

    - name: Build OpenBullet2 on Windows
      run: |
        git clone https://github.com/openbullet/OpenBullet2.git
        cd OpenBullet2
        
        # build کامل روی ویندوز
        dotnet restore
        dotnet build --configuration Release
        dotnet publish --configuration Release --output ./publish

    - name: Verify publish output
      run: |
        cd OpenBullet2/publish
        dir
        echo "=== Checking wwwroot ==="
        if (Test-Path wwwroot) {
            dir wwwroot
            echo "✅ wwwroot directory exists"
        } else {
            echo "❌ wwwroot directory missing"
        }

    - name: Run OpenBullet2 on Windows
      run: |
        cd OpenBullet2/publish
        Start-Process -NoNewWindow -FilePath "dotnet" -ArgumentList "OpenBullet2.Web.dll", "--urls", "http://0.0.0.0:8080"
        sleep 30

    - name: Check if running
      run: |
        # بررسی اینکه سرویس در حال اجراست
        $process = Get-Process -Name "dotnet" -ErrorAction SilentlyContinue
        if ($process) {
            echo "✅ OpenBullet2 is running"
        } else {
            echo "❌ OpenBullet2 failed to start"
            exit 1
        }
        
        # تست اتصال محلی
        try {
            $response = Invoke-WebRequest -Uri "http://localhost:8080" -UseBasicParsing
            echo "✅ Web interface is accessible"
        } catch {
            echo "⚠️ Cannot access web interface locally"
        }

    - name: Download and setup Ngrok on Windows
      run: |
        # دانلود Ngrok برای ویندوز
        Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip" -OutFile "ngrok.zip"
        Expand-Archive -Path "ngrok.zip" -DestinationPath "."
        .\ngrok.exe authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
        
        # راه‌اندازی تونل
        Start-Process -NoNewWindow -FilePath ".\ngrok.exe" -ArgumentList "http", "8080"
        sleep 30

    - name: Get Ngrok URL on Windows
      run: |
        # دریافت آدرس از API Ngrok
        $maxRetries = 10
        $publicUrl = $null
        
        for ($i = 1; $i -le $maxRetries; $i++) {
            Write-Host "Attempt $i/$maxRetries to get Ngrok URL..."
            
            try {
                $tunnelInfo = Invoke-RestMethod -Uri "http://localhost:4040/api/tunnels"
                $publicUrl = $tunnelInfo.tunnels[0].public_url
                
                if ($publicUrl) {
                    Write-Host "✅ Ngrok URL found: $publicUrl"
                    break
                }
            } catch {
                Write-Host "API call failed, retrying..."
            }
            
            Start-Sleep -Seconds 5
        }
        
        if (-not $publicUrl) {
            $publicUrl = "https://ob2.ngrok.io"
            Write-Host "⚠️ Using default URL: $publicUrl"
        }
        
        echo "PUBLIC_URL=$publicUrl" | Out-File -FilePath $env:GITHUB_ENV -Append

    - name: Display access information
      run: |
        Write-Host "========================================"
        Write-Host "🎉 OPENBULLET2 ON WINDOWS IS READY!"
        Write-Host "========================================"
        Write-Host "🌐 Public URL: $env:PUBLIC_URL"
        Write-Host "👤 Username: admin"
        Write-Host "🔐 Password: admin"
        Write-Host "💻 OS: Windows"
        Write-Host "⏰ Duration: 6 hours"
        Write-Host "========================================"

    - name: Keep service running
      run: |
        Write-Host "🟢 OpenBullet2 running on Windows..."
        # نگه‌داری برای 6 ساعت
        Start-Sleep -Seconds 21600
